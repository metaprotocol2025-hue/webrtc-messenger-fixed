// –í–Ω–µ—à–Ω–∏–π keep-alive —Å–∫—Ä–∏–ø—Ç –¥–ª—è Render
// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

const fetch = require('node-fetch');

const RENDER_URL = process.env.RENDER_URL || 'https://webrtc-messenger-fixed.onrender.com';
const PING_INTERVAL = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

console.log('üíì Keep-alive —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è:', RENDER_URL);

async function pingServer() {
  try {
    const response = await fetch(`${RENDER_URL}/api/ping`);
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Ping —É—Å–ø–µ—à–µ–Ω:', data.timestamp);
    } else {
      console.log('‚ö†Ô∏è Ping –Ω–µ—É—Å–ø–µ—à–µ–Ω:', response.status);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ ping:', error.message);
  }
}

// –ü–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(pingServer, PING_INTERVAL);

// –ü–µ—Ä–≤—ã–π –ø–∏–Ω–≥ —Å—Ä–∞–∑—É
pingServer();

console.log(`üíì Keep-alive –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å ping –∫–∞–∂–¥—ã–µ ${PING_INTERVAL / 1000} —Å–µ–∫—É–Ω–¥`);


