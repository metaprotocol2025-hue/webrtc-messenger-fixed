#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ TURN-—Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ

const https = require('https');
const http = require('http');

const deployedUrl = 'https://webrtc-messenger-fixed.onrender.com';

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞...');
console.log(`üåê URL: ${deployedUrl}`);
console.log();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
function checkUrl(url) {
  return new Promise((resolve, reject) => {
    const client = url.startsWith('https') ? https : http;
    
    const req = client.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        resolve({
          statusCode: res.statusCode,
          headers: res.headers,
          body: data
        });
      });
    });
    
    req.on('error', (err) => {
      reject(err);
    });
    
    req.setTimeout(10000, () => {
      req.destroy();
      reject(new Error('Timeout'));
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ICE —Å–µ—Ä–≤–µ—Ä–æ–≤
function checkIceConfiguration(html) {
  console.log('üìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ICE —Å–µ—Ä–≤–µ—Ä–æ–≤...');
  
  // –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è TURN —Å–µ—Ä–≤–µ—Ä–æ–≤
  const turnServers = html.match(/turn:[^"'\s]+/g) || [];
  const stunServers = html.match(/stun:[^"'\s]+/g) || [];
  
  console.log(`üîç –ù–∞–π–¥–µ–Ω–æ STUN —Å–µ—Ä–≤–µ—Ä–æ–≤: ${stunServers.length}`);
  stunServers.forEach(server => console.log(`   - ${server}`));
  
  console.log(`\nüîÑ –ù–∞–π–¥–µ–Ω–æ TURN —Å–µ—Ä–≤–µ—Ä–æ–≤: ${turnServers.length}`);
  turnServers.forEach(server => console.log(`   - ${server}`));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Metered.ca TURN —Å–µ—Ä–≤–µ—Ä–æ–≤
  const meteredServers = turnServers.filter(server => server.includes('openrelay.metered.ca'));
  const viagenieServers = turnServers.filter(server => server.includes('numb.viagenie.ca'));
  
  console.log(`\nüìä –ê–Ω–∞–ª–∏–∑ TURN —Å–µ—Ä–≤–µ—Ä–æ–≤:`);
  console.log(`   Metered.ca: ${meteredServers.length} —Å–µ—Ä–≤–µ—Ä–æ–≤`);
  console.log(`   Viagenie: ${viagenieServers.length} —Å–µ—Ä–≤–µ—Ä–æ–≤`);
  
  if (meteredServers.length > 0) {
    console.log('   ‚úÖ Metered.ca TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  } else {
    console.log('   ‚ùå Metered.ca TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
  
  if (viagenieServers.length > 0) {
    console.log('   ‚úÖ Viagenie TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  } else {
    console.log('   ‚ùå Viagenie TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
  
  return {
    stunCount: stunServers.length,
    turnCount: turnServers.length,
    meteredCount: meteredServers.length,
    viagenieCount: viagenieServers.length,
    hasTurnServers: turnServers.length > 0
  };
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function checkDeployedMessenger() {
  try {
    console.log('üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞...');
    const response = await checkUrl(deployedUrl);
    
    if (response.statusCode === 200) {
      console.log('‚úÖ –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!');
      console.log(`üìÑ –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${response.body.length} –±–∞–π—Ç`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ICE —Å–µ—Ä–≤–µ—Ä–æ–≤
      const config = checkIceConfiguration(response.body);
      
      console.log('\n' + '='.repeat(60));
      console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
      console.log('='.repeat(60));
      
      if (config.hasTurnServers) {
        console.log('üéâ –û–¢–õ–ò–ß–ù–û! TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
        console.log('   –í–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.');
        
        if (config.meteredCount > 0) {
          console.log('   ‚úÖ Metered.ca TURN —Å–µ—Ä–≤–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã');
        }
        if (config.viagenieCount > 0) {
          console.log('   ‚úÖ Viagenie TURN —Å–µ—Ä–≤–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã');
        }
      } else {
        console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.');
        console.log('   –í–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–π —Å–µ—Ç–∏ Wi-Fi.');
        console.log('   –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω—É–∂–Ω—ã TURN —Å–µ—Ä–≤–µ—Ä—ã.');
      }
      
      console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
      console.log(`   STUN —Å–µ—Ä–≤–µ—Ä–æ–≤: ${config.stunCount}`);
      console.log(`   TURN —Å–µ—Ä–≤–µ—Ä–æ–≤: ${config.turnCount}`);
      console.log(`   Metered.ca: ${config.meteredCount}`);
      console.log(`   Viagenie: ${config.viagenieCount}`);
      
      console.log('\nüß™ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
      console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ https://webrtc-messenger-fixed.onrender.com/');
      console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ TURN –∫–∞–Ω–¥–∏–¥–∞—Ç—ã');
      console.log('   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ 4G/5G');
      console.log('   4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è');
      
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: HTTP ${response.statusCode}`);
    }
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: ${error.message}`);
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   - –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –µ—â–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ Render');
    console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
    console.log('   - Render —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkDeployedMessenger();


